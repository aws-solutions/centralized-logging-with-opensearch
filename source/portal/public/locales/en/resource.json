{
  "group": {
    "name": "Instance Group",
    "groups": "Groups",
    "config": "Select Instances",
    "instances": "Instances",
    "instancesDesc": "select instances to create instance group",
    "asgsDesc": "Select a autoscaling group to create instance group",
    "asgs": "Auto Scaling Groups",
    "list": {
      "name": "Name",
      "type": "Type",
      "account": "Account",
      "platform": "Platform",
      "created": "Created time"
    },
    "delete": "Delete Instance Group",
    "deleteTips": "Are you sure you want to delete the instance group ",
    "detail": {
      "general": "General",
      "name": "Name",
      "instanceSelection": "Instance selection",
      "platform": "Platform",
      "created": "Created",
      "asgName": "Auto Scaling Group Name",
      "list": {
        "groups": "Groups",
        "name": "Name",
        "type": "Type",
        "instanceId": "Instance ID",
        "primaryIP": "Primary IP",
        "agent": "Agent",
        "agentStatus": "Agent Status"
      },
      "addInstances": "Add Instances",
      "removeInstances": "Remove Instances",
      "removeInstancesTips": "Are you sure you want to remove these instances from instance group?",
      "notExist": "Instance Group does not exist.",
      "asg": {
        "asgGuide": "Auto Scaling Group Guide",
        "instance": "Instances",
        "asgCreateIngestTip1": " To complete the setup for this instance group, please select an ",
        "asgCreateIngestTip2": "Application Log",
        "asgCreateIngestTip3": " to create a log ingestion with this instance group first.",
        "asgTips1": "Please add below User Data script to your Auto Scaling Group's launch template or launch configuration (depends on your Auto Scaling Group' s setup, please follow the AWS documentation to update ",
        "asgTips2": "Launch Template",
        "asgTips3": " or ",
        "asgTips4": "Launch Configurations",
        "asgTipsTitle": "You will need add below content into your launch template to update your EC2 user data section.",
        "asgTipsDesc": "Add below permissions to the IAM instance profile for your ASG."
      }
    },
    "create": {
      "name": "Create",
      "selectInstance": "Please select instances",
      "selectStatus": "Please select log agent online instance or waiting all log agent installed successfully.",
      "asg": {
        "name": "Auto Scaling groups",
        "desc": "Select the Auto Scaling group you want to create log ingestion.",
        "selectASG": "Please select an Auto Scaling group"
      }
    },
    "comp": {
      "selectInstance": "Please select instances",
      "instanceGroup": "Instance Group",
      "instanceGroupDesc": "An instance Group is a collection of instances. Currently, only instances in the same region as Solution are supported. Please make sure your instances have meet the following prerequisites.",
      "tips1": "AWS Systems Manager Agent (SSM Agent) is installed on the instances.",
      "tips2": "AmazonSSMManagedInstanceCore policy is associated with the instances.",
      "tips3": "The instances have network access to AWS Systems Manager.",
      "tips4": " The Fluent Bit agent has a dependency of OpenSSL 1.1, please make sure OpenSSL 1.1 installed on Linux instances.",
      "settings": "Instance Group Settings",
      "groupName": "Group Name",
      "groupNameDesc": "Enter the name of the log group. The name must be unique, and can only contains lower case letters and -.",
      "groupNameError": "Please input the group name",
      "defaultOfflineError": "Failed to get command invocation response, please check Fluent Bit manually.",
      "instances": {
        "title": "Instances",
        "name": "Name",
        "instanceId": "Instance ID",
        "primaryIp": "Primary IP",
        "logAgent": "Log Agent",
        "pendingStatus": "Agent Status",
        "filter": "Filter instances by Instance ID"
      }
    }
  },
  "config": {
    "name": "Log Config",
    "create": "Create",
    "edit": "Edit",
    "type": {
      "nginx": "Nginx",
      "json": "JSON",
      "apache": "Apache HTTP Server",
      "syslog": "Syslog",
      "singleLine": "Single-line Text",
      "multiLine": "Multi-line Text"
    },
    "list": {
      "config": "Configurations",
      "name": "Name",
      "type": "Type",
      "agent": "Agent",
      "created": "Created time"
    },
    "delete": "Delete Log Config",
    "deleteTips": "Are you sure you want to delete the log config ",
    "detail": {
      "general": "General",
      "name": "Name",
      "type": "Type",
      "agent": "Agent",
      "version": "Version",
      "created": "Created",
      "logConfig": "Log configuration",
      "path": "Path",
      "sampleLog": "Sample Log",
      "nginxFormat": "Nginx log format",
      "apacheFormat": "Apache log format",
      "springbootFormat": "Spring Boot log format",
      "syslogFormat": "Syslog Format",
      "jsonFormat": "JSON log format",
      "regExp": "Regular expression",
      "logSpecs": "Log Specification",
      "specName": "Name",
      "specType": "Type",
      "specFormat": "Format",
      "timeFormat": "Time Format",
      "indexName": "Index name",
      "notExist": "Log Config does not exist.",
      "notSupportEdit": "You are viewing the log config that was used at the time when the pipeline was created, to view the latest version of the log config or edit the log config, please go to: "
    },
    "common": {
      "configName": "Config Name",
      "configNameDesc": "Enter the name of the log configuration. The name must be unique, and can only contains lower case letters and -.",
      "configNameError": "Please input log config name",
      "logPath": "Log Path",
      "logPathDesc": "Enter the location of the log files. All files under the specified folder will be included. Use ' , ' to separate multiple paths.",
      "logPathDescEKS": "Enter the location of the log files.",
      "logType": "Log Type",
      "logTypeDesc": "Select the built-in plugin to parse your log data from log agent.",
      "logTypeDescSyslog": "Select the built-in plugin to parse your log data from log agent. Only can choose syslog-supported log config (i.e., Single-line Text, Syslog, JSON).",
      "logTypeError": "Please select a log type",
      "chooseLogType": "Choose a Log Type",
      "regName": "Regular expression: ",
      "nginxFormat": "Nginx Log Format",
      "nginxFormatDesc": "The log format configuration of Nginx.",
      "nginxFormatInvalid": "The specified format is invalid, a standard NGINX configuration file usually begins with log_format.",
      "apacheFormat": "Apache Log Format",
      "apacheFormatDesc": "The log format configuration of Apache. e.g. LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b\" common",
      "apacheFormatError": "The specified format is invalid, a standard APACHE configuration file usually begins with LogFormat.",
      "regexFormat": "Regular Expression",
      "regexFormatDesc": "Input the regular expression to parse the log.",
      "sampleParsing": "Sample log parsing",
      "parser": "Parser",
      "parserDesc": "Select the supported parser.",
      "chooseParser": "Choose a Parser",
      "syslogFormat": "Syslog Format",
      "syslogFormatDesc": "Enter the log format template from the syslog configuration file",
      "springbootLogFormat": "Log Format",
      "springbootLogFormatDesc": "Enter the log format configuration in the Spring Boot application.\n(*The currently generated regular expression only supports standard output format, if it is non-standard output, please use custom regular expression to create.)",
      "firstLineRegEx": "First Line Regular Expression",
      "firstLineRegExDesc": "Input the Regular Expression to extract the first of the log."
    },
    "parsing": {
      "alert": "Regular expression is invalid, please check your log format.",
      "sampleLog": "Sample Log",
      "sampleLogDesc": "Input one line of sample log to validate the Regular Expression.",
      "sampleLogJSONDesc": "Input a JSON format sample log to parse.",
      "valid": "The verification succeeded.",
      "invalid": "The verification failed. Make sure that the sample log matches the specified log_format.",
      "parseLog": "Parse Log",
      "parseLogDesc": "Log attributes of the sample log.",
      "key": "Key",
      "type": "Type",
      "value": "Value",
      "dateTips": "You must specify the datetime of the log using key “time”. If not specified, system time will be added.",
      "timeKeyTips": "You must specify the time key of the log. If not specified, system time will be added.",
      "timeFormat": "Time format",
      "timeFormatDesc": "Input the timestamp format used in your logs.",
      "sampleRequired": "Please input a sample log and parse log to check the log config and regex is valid.",
      "regexLogParseError": "Please confirm that the sample log has been parsed and make sure the log format matches the sample log",
      "formatSuccess": "Format Validated.",
      "formatError": "Failed to validate.",
      "timeKey": "Time Key",
      "timeKeyFormat": "Time Key Format",
      "selectTimeKey": "Please select time key",
      "timeKeyDesc": "Select the Time Key of the log and input the time format.",
      "timezone": "Timezone",
      "selectTimezone": "Please select timezone",
      "timezoneDesc": "Specify the timezone for your log, by default, it is the timezone parsed from your time key. That is, if the time field in your log contains a time zone, you don't need to select it. If you wish to use a different timezone, please select time zone from the timezone list.",
      "inputJSON": "Please input the sample json log",
      "userLogFormatError": "User log format contains non latin characters.",
      "userLogFormatNotEmpty": "User log format must not be empty.",
      "regexMustNotBeEmpty": "Regex must not be empty",
      "notJSONFormat": "Sample Log is not a JSON format"
    },
    "filter": {
      "name": "Filter",
      "desc": "The solution will collect the logs match ALL the specified conditions only.",
      "enabled": "Enabled",
      "key": "Key",
      "condition": "Condition",
      "regex": "RegEx",
      "include": "Include",
      "exclude": "Exclude",
      "alert": "You must provide sample logs to add filter condition, please retry after you provide sample logs."
    }
  },
  "crossAccount": {
    "name": "Member Accounts",
    "accountSettings": "Account Settings",
    "account": "Account",
    "currentAccount": "Current Account",
    "selectDesc1": "Select the AWS account at which the log is stored. To create a member account, go to ",
    "linkAccount": "Member Accounts",
    "detail": "Details",
    "list": {
      "accounts": "Member Accounts",
      "accountId": "Account ID",
      "accountName": "Account Name",
      "iamRole": "IAM Role",
      "created": "Created time",
      "removeLink": "Remove account link",
      "removeLinkTips": "Are you sure you want to remove the account "
    },
    "link": {
      "name": "Link",
      "stepOneTitle": "Step1. Setup Member Account",
      "stepOneTipsDesc": "Please deploy the CloudFormation stack in the member account.",
      "stepOne1": "1. Go to the CloudFormation Console.",
      "stepOne2": "2. Switch to the same region as Solution deployed in: ",
      "stepOne3": "3. Create new stack using the template URL:",
      "stepOne4": "4. Wait till complete",
      "stepTwoTitle": "Step2. Create a Member Account",
      "accountName": "Account Name",
      "accountNameDesc": "Input a friendly name of the account. The name must be unique. (e.g. sub-account-1)",
      "inputAccountName": "Please input Account Name",
      "accountId": "Account ID",
      "accountIdDesc": "The 12 digits AWS Account ID.",
      "inputAccountId": "Please input Account ID",
      "accountIdFormatError": "Account ID format error",
      "accountRoles": "Member Account Role ARN",
      "accountRolesDesc": "Input the MemberAccountRoleARN in the CloudFormation Output in Step 1.",
      "inputAccountRoles": "Please input Member Account ARN",
      "accountRolesFormatError": "Account Roles format error",
      "installDocs": "Fluent Bit Agent Installation Document",
      "installDocsDesc": "Input the AgentInstallDocument in the CloudFormation Output in Step 1.",
      "inputInstallDocs": "Please input Installation Document",
      "installDocsFormatError": "Installation Document format error",
      "configDocs": "Fluent Bit Agent Configuration Document",
      "configDocsDesc": "Input the AgentConfigDocument in the CloudFormation Output in Step 1.",
      "inputConfigDocs": "Please input the AgentConfigDocument.",
      "configDocsFormatError": "Configuration Document format error",
      "s3Bucket": "Member Account S3 Bucket",
      "s3BucketDesc": "Input the MemberAccountS3Bucket in the CloudFormation Output in Step 1.",
      "inputS3Bucket": "Please input Member Account S3 Bucket",
      "s3BucketFormatError": "Amazon S3 Bucket format error",
      "stackId": "Member Account CloudFormation Stack Id",
      "stackIdDesc": "Input the MemberAccountStackId in the CloudFormation Output in Step 1.",
      "stackIdSameRegion": "Please ensure the stack is deployed in the same region as Solution",
      "inputStackId": "Please input Member Account CloudFormation Stack Id",
      "stackIdFormatError": "Stack ID format error",
      "kmsKey": "Member Account KMS Key ARN",
      "kmsKeyDesc": "Input the MemberAccountKMSKeyARN in the CloudFormation output in Step 1.",
      "inputKmsKey": "Please input Member Account KMS Key ARN",
      "kmsKeyFormatError": "KMS Key format error",
      "iamInstanceProfileArn": "Member Account Instance Profile ARN",
      "iamInstanceProfileArnDesc": "Input MemberAccountIamInstanceProfileARN in the CloudFormation Output in Step 1.",
      "inputIamInstanceProfileArn": "Please input Member Account Instance Profile ARN",
      "iamInstanceProfileArnFormatError": "Instance Profile ARN format error",
      "updateCwlRoleFailed": "Update centralized cloudwatch role failed",
      "accountNotFound": "Account is not found",
      "accountAlreadyExists": "Account already exists"
    }
  }
}
