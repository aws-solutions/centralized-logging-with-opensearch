{
  "name": "Centralized Logging with OpenSearch",
  "title": "Centralized Logging with OpenSearch",
  "version": "Version",
  "newVersionAvailable": "New version available",
  "newVersion": "A new version ({{latestVersionNumber}}) of this solution is available. Click the Learn More button to see the latest updates.",
  "signin": {
    "signInToSolution": "Centralized Logging with OpenSearch",
    "email": "Email *",
    "inputEmail": "Enter your email",
    "password": "Password *",
    "inputPassword": "Enter your password",
    "signIn": "Sign In",
    "reSignIn": "Please sign in again",
    "reSignInDesc": "You were signed out of your account. Please press Reload to sign in again."
  },
  "header": {
    "name": "AWS Solutions",
    "welcome": "Welcome",
    "logout": "Sign Out"
  },
  "doc": {
    "guide": "the Guide"
  },
  "menu": {
    "home": "Home",
    "cluster": "Clusters",
    "osDomain": "OpenSearch domains",
    "importOS": "Import OpenSearch domain",
    "logPipeline": "Log analytics pipelines",
    "serviceLog": "AWS service log",
    "appLog": "Application log",
    "containers": "Containers",
    "logSource": "Log sources",
    "eksLog": "EKS clusters",
    "resource": "Resources",
    "instanceGroup": "Instance Groups",
    "logConfig": "Log Configs",
    "crossAccount": "Member accounts",
    "doc": "Documentation",
    "grafana": "Grafana"
  },
  "bottom": {
    "copy": "Amazon Web Services, Inc. or its affiliates. All rights reserved.",
    "feedback": "Feedback",
    "privacy": "Privacy Policy",
    "use": "Terms of Use"
  },
  "step": {
    "logSource": "Log source",
    "analyticsEngine": "Analytics Engine",
    "logProcessing": "Log processor",
    "alarmTags": "Alarms & Tags",
    "tags": "Tags",
    "bufferLayer": "Buffer",
    "logConfig": "Log Config",
    "pipelineSettings": "Pipeline settings"
  },
  "tag": {
    "name": "Tags",
    "desc": "A tag is a label that you assign to an AWS resource. Each tag consists of a key and an optional value. You can use tags to search and filter your resources or track your AWS costs.",
    "key": "Key",
    "value": "Value",
    "optional": "optional",
    "enterKey": "Enter key",
    "enterValue": "Enter value",
    "noTag": "No Tags",
    "noTagDesc": "No tags associated with the resource.",
    "tagLimit1": "You can add up to ",
    "tagLimit2": " more tags",
    "tagFilter": "Specify tags",
    "tagFilterAnd": "and",
    "tagFilterOr": "or",
    "tagFilterDesc": "Enter a tag key and value applied to the resources you want to target (maximum 5), and then choose Add."
  },
  "button": {
    "add": "Add",
    "importDomain": "Import domain",
    "createIngestion": "Create a pipeline",
    "viewDetail": "View details",
    "remove": "Remove",
    "close": "Close",
    "delete": "Delete",
    "cancel": "Cancel",
    "create": "Create",
    "previous": "Previous",
    "next": "Next",
    "import": "Import",
    "addTag": "Add new tag",
    "createInstanceGroup": "Create an Instance Group",
    "createLogConfig": "Create a Log Config",
    "edit": "Edit",
    "save": "Save",
    "parseLog": "Parse log",
    "installAgent": "Install log agent",
    "createPipeline": "Create a pipeline",
    "createAnIngestion": "Add a source",
    "addApplication": "Add an application",
    "copy": "Copy",
    "enable": "Enable",
    "awsConsole": "AWS console",
    "loadMoreInstance": "Load more instances",
    "importEksCluster": "Import an EKS cluster",
    "fromInstance": "From Instance Group",
    "fromS3": "From Amazon S3 Bucket",
    "fromOtherSourceS3": "S3 bucket",
    "fromSysLog": "From Syslog",
    "fromEKS": "From EKS cluster",
    "validate": "Validate",
    "changeIndex": "Change index name",
    "linkAnAccount": "Add a member account",
    "link": "Link",
    "continueCreate": "Continue create",
    "createSameAccountIngestion": "Create same account ingestion",
    "upgrade": "Upgrade",
    "addCondition": "Add condition",
    "addInstances": "Add instances",
    "removeInstances": "Remove instances",
    "gotoInstanceGroup": "Go To Instance Group",
    "confirm": "Confirm",
    "createNew": " Create new",
    "viewDetails": "View details",
    "viewDomain": "View domain",
    "addNewItem": "Add new item",
    "validateAndImport": "Validate & Import",
    "actions": "Actions",
    "download": "Download",
    "chooseFile": "Choose file",
    "reload": "Reload",
    "resume": "Resume",
    "export": "Export"
  },
  "status": {
    "unknown": "Unknown",
    "active": "Active",
    "paused": "Paused",
    "created": "Created",
    "updated": "Updated",
    "deleted": "Deleted",
    "reversed": "Reversed",
    "unchanged": "Unchanged",
    "creating": "Creating",
    "inactive": "Inactive",
    "error": "Error",
    "green": "Green",
    "red": "Red",
    "yellow": "Yellow",
    "deleting": "Deleting",
    "online": "Online",
    "offline": "Offline",
    "installing": "Installing",
    "inProgress": "In Progress",
    "updating": "Updating",
    "imported": "Imported",
    "failed": "Failed",
    "insufficient_data": "In-Sufficient data",
    "alarm": "In-alarm",
    "ok": "OK",
    "loading": "Loading...",
    "distributing": "Distributing",
    "running": "Running",
    "succeeded": "Succeeded",
    "timed_out": "Timed Out",
    "aborted": "Aborted"
  },
  "monitoring": {
    "title": "Metrics",
    "logSource": "Log sources",
    "buffer": "Buffer",
    "logProcessor": "Log Processor",
    "lambdaProcessor": "Lambda Processor",
    "osiProcessor": "OpenSearch Ingestion Processor",
    "lambda": "Lambda",
    "lightEngineSvcLambdaDesc": "Retrieve log files from the log bucket configured by {{service}}, and copy these files to the Staging bucket",
    "lightEngineAppLambdaDesc": "Retrieve log files from the log buffer layer and copy these files to the Staging bucket",
    "failedBucket": "Failed record S3 bucket",
    "deliveryKDS": "Log delivery KDS",
    "deliveryKDF": "Log delivery KDF",
    "metrics": {
      "SQSNumberOfMessagesSent": "Number Of Messages Received",
      "SQSNumberOfMessagesDeleted": "Number Of Messages Deleted",
      "SQSApproximateAgeOfOldestMessage": "Approximate Age Of Oldest Message",
      "SQSApproximateNumberOfMessagesVisible": "SQS Approximate Number of Messages Visible",
      "SQSAppriximateNumberOfMessageVisible": "Approximate Number Of Messages Visible",
      "EvtMatchedEvents": "Number Of Events That Match A Rule",
      "EvtInvocations": "Number Of Invocations By A Rule",
      "EvtFailedInvocations": "Number Of Failed Invocations",
      "EvtTriggeredRules": "Number Of Rules Matched By Event",
      "TotalLogs": "Number of incoming logs",
      "FailedLogs": "Number of logs failed to process",
      "ExcludedLogs": "Number of logs are excluded",
      "LoadedLogs": "Number of logs are loaded successfully",
      "ProcessorFnError": "Error count",
      "ProcessorFnConcurrentExecutions": "Total concurrent executions",
      "ProcessorFnDuration": "Duration (millisecond)",
      "ProcessorFnThrottles": "Throttles",
      "ProcessorFnInvocations": "Invocations",
      "ReplicationFnError": "Error count",
      "ReplicationFnConcurrentExecutions": "Total concurrent executions",
      "ReplicationFnDuration": "Duration (millisecond)",
      "ReplicationFnThrottles": "Throttles",
      "ReplicationFnInvocations": "Invocations",
      "SyslogNLBActiveFlowCount": "Syslog NLB Active Flow Count",
      "SyslogNLBProcessedBytes": "Syslog NLB Processed Bytes",
      "KDSIncomingBytes": "KDS Incoming Bytes",
      "KDSIncomingRecords": "KDS Incoming Records",
      "KDSPutRecordsBytes": "KDS Put Record Bytes",
      "KDSThrottledRecords": "KDS Throttled Records",
      "KDSThrottledRecordsPercent": "KDS Throttled Records Percent",
      "KDSWriteProvisionedThroughputExceeded": "KDS Write Provisioned Throughput Exceeded",
      "FluentBitInputBytes": "Fluent Bit Input Bytes",
      "FluentBitInputRecords": "Fluent Bit Input Records",
      "FluentBitOutputDroppedRecords": "Fluent Bit Output Dropped Records",
      "FluentBitOutputErrors": "Fluent Bit Output Errors",
      "FluentBitOutputRetriedRecords": "Fluent Bit Output Retried Records",
      "FluentBitOutputRetriesFailed": "Fluent Bit Output Retries Failed",
      "FluentBitOutputRetries": "Fluent Bit Output Retries",
      "FluentBitOutputProcRecords": "Fluent Bit Output Process Records",
      "FluentBitOutputProcBytes": "Fluent Bit Output Process Bytes",
      "KDFIncomingBytes": "KDF Incoming Bytes",
      "KDFIncomingRecords": "KDF Incoming Records",
      "KDFDeliveryToS3Bytes": "KDF Delivery To S3Bytes",
      "OSIBytesTransmitted": "Bytes transmitted",
      "OSIDocumentsWritten": "Documents written",
      "OSIDocumentsFailedWrite": "Documents failed to write",
      "OSIDocumentsRetriedWrite": "Documents retried to write",
      "OSIDLQS3RecordsSuccess": "DLQ S3 records success",
      "OSIDLQS3RecordsFailed": "DLQ S3 records failed"
    }
  },
  "logging": {
    "resources": "Resources",
    "desc": "This solutions parse your data using AWS Lambda or OpenSearch Ingestion Service. The runtime logs are stored in CloudWatch Logs, and the detailed record level error information and unparsed data are saved to S3 bucket.",
    "logEvent": "Log Events",
    "processorLamdaLog": "Log of processor lambda",
    "processorOSILog": "Log of processor OpenSearch Ingestion Service",
    "logGroupName": "Processor log group",
    "creationTime": "Created",
    "logStreams": "Log streams",
    "logStream": "Log stream name",
    "lastEventTime": "Last event time",
    "filterPlaceHolder": "Filter log stream or try prefix search",
    "detailedErrorLogs": "Detail error logs",
    "errorLogDesc": "You can find record-level error information in below S3 location.",
    "helperLamdaLog": "Log of helper lambda",
    "logEvents": "Log Events: ",
    "timestamp": "Timestamp",
    "message": "Message",
    "hasOlder": "There are older events to load. ",
    "loadMore": "Load more",
    "noOlder": "No older events at this moment.",
    "retry": "Retry.",
    "hasNewer": "There are newer events to load. ",
    "noNewer": "No newer events at this moment. ",
    "noData": "No Data",
    "loading": "Loading...",
    "filterEvents": "Filter Events"
  },
  "alarm": {
    "alarms": "Pipeline alarms",
    "createAlarms": "Enable pipeline alarms",
    "createTitleDesc": "The solution will collect metrics to monitor the log pipeline status, and it provides a set of recommended alarms to notify you if any anomaly detected. Please note that additional charge will apply if enabled alarms.",
    "titleDesc": "The solution provides a set of alarms that are useful to monitor the ingestion pipeline.",
    "desc": "Add preview of preset alarm.",
    "chooseExistTopic": "Notify an existing SNS topic",
    "createTopic": "Create a new SNS topic",
    "selectSNS": "Select a SNS topic",
    "emailTitle": "Email - optional",
    "emailDesc": "Please provide email address for the newly created SNS topic to notify. Remember to click the confirmation sent to your email.",
    "notification": "Notification",
    "notificationDesc": "Select a SNS topic as the destination for alarm notifications, you can then create subscriptions to forward the notification to different platform (e.g., email, webhook).",
    "learnMore": "Learn more about SNS",
    "snsTopic": "SNS topic",
    "snsTopicDesc": "Choose an existing SNS topic to send alarms.",
    "logProcessorAlarms": "Log processor alarms",
    "logReplicationAlarms": "Log replication alarms",
    "bufferLayerAlarms": "Buffer alarms",
    "sourceAlarms": "Source alarms",
    "ingestionId": "Ingestion ID",
    "status": "Status",
    "notActive": "Pipeline did not active yet.",
    "notSupport": "Pipeline Alarm does not support this service log",
    "expandPresetAlarm": "Preset alarms",
    "topicName": "Topic name",
    "topicNameDesc": "Maximum 128 characters. Can include alphanumeric characters, hyphens (-) and underscores (_)",
    "list": {
      "PROCESSOR_ERROR_RATE_ALARM": "ErrorRate >= 50% for 5 minutes, 5 consecutive time",
      "PROCESSOR_ERROR_INVOCATION_ALARM": "Error invocation #  >= 10 for 5 minutes, 1 consecutive time",
      "PROCESSOR_ERROR_RECORD_ALARM": "Failed record # >= 1  for 1 minute, 1 consecutive time",
      "PROCESSOR_DURATION_ALARM": "Average execution duration in last 5 minutes >= 60000 milliseconds ",
      "OLDEST_MESSAGE_AGE_ALARM": "SQS Oldest Message Age >= 30 minutes",
      "DEAD_LETTER_INVOCATIONS": "DeadLetterInvocations # >= 1 within 5 minutes",
      "FLUENTBIT_OUTPUT_RETRIED_RECORDS_ALARM": "Fluent Bit output_retried_record_total >= 100 for last 5 minutes",
      "KDS_THROTTLED_RECORDS_ALARM": "KDS PutRecord throttled # >= 10 for 1 minute, 1 consecutive time"
    },
    "error": {
      "chooseExist": "Please select SNS topic",
      "inputTopicName": "Please input topic name",
      "emailInvalid": "Email must be a validate format"
    }
  },
  "pipeline": {
    "detail": {
      "generalConfig": "General configuration",
      "openSearchIndex": "OpenSearch index",
      "cloudformationStack": "CloudFormation stack",
      "analyticsEngine": "Analytics Engine",
      "status": "Status",
      "created": "Created",
      "table": "Table (AWS Glue)",
      "database": "Database (AWS Glue)",
      "lightEngine": "Light Engine",
      "index": "Index",
      "compression": "Compression",
      "lifeCycle": "Lifecycle",
      "scheduleExp": "Log processor schedule expression",
      "logMergerSchedule": "Log merger schedule",
      "logArchiveSchedule": "Log archive schedule",
      "tableOverview": "Table - overview",
      "tableDetails": "Table - details",
      "logMerge": "Log Merge (days)",
      "logArchive": "Log retention (days)",
      "resource": "Resource",
      "bucketPrefix": "Bucket prefix"
    }
  },
  "processor": {
    "lambda": "AWS Lambda",
    "osi": "OpenSearch Ingestion Service",
    "logProcessorSettings": "Log processor options",
    "serviceUnavailable": "OpenSearch Ingestion Service is not supported in the current region, the log processor will use Lambda functions.",
    "onlySupportLambda": "Log Processor using Lambda functions when pipeline is light engine.",
    "logProcessorType": "Log processor type",
    "lambdaDesc": "Logs will be processed and ingested using Lambda function. Pay as you go, charged by lambda processing compute and memory based on usage. Use this if you have small and burst log volume or no need of further processing on logs.",
    "osiDesc": "Logs will be processed and ingested by OpenSearch Ingestion Service. You pay by the provisioned Ingestion Capacity Unit. Use this if you expect advanced processing (e.g., sampling, multi-route) on logs before ingestion into OpenSearch.",
    "pipelineCapacity": "Pipeline capacity",
    "pipelineCapacityDesc": "A single Ingestion OpenSearch Compute Unit (OCU) represents billable compute and memory units. You are charged an hourly rate based on the number of OCUs used to run your data pipelines.",
    "min": "Minimum",
    "minError": "Minimum value invalid",
    "maxError": "Maximum value invalid",
    "max": "Maximum",
    "minMaxTips": "Minimum and maximum capacity must be positive numbers between 1 and 96. The maximum capacity limit for stateful pipelines (for example, those that use the service_map or aggregate processor) is 48.",
    "disabledEnrich": "Enriched fields are not applicable in OpenSearch Ingestion Service model.",
    "lambdaConcurrency": "AWS Lambda concurrency",
    "configConcurrency": "Lambda concurrency config",
    "configConcurrencyDesc": "Edit concurrency which can not exceed unreserved account concurrency amount. <0>Configuring reserved concurrency</0>. 0 means no limitation of in-flight requests that your function is currently handling.",
    "accountConcurrency": "Unreserved account concurrency: ",
    "concurrencyRequiredError": "Please input concurrency",
    "concurrencyMinError": "The unreserved account concurrency can't go below 100"
  },
  "seconds": "Seconds",
  "yes": "Yes",
  "no": "No",
  "none": "None",
  "oops": "Oops...",
  "copied": "Copied!",
  "loading": "loading...",
  "noData": "No Data",
  "info": "Info",
  "optional": "optional",
  "noMoreInstance": "No more instances",
  "unknown": "Unknown",
  "maxmindCopyRight": "This product includes GeoLite2 data created by MaxMind, available from ",
  "signInAgain": "Please sign in again",
  "reloginTips": "You were signed out of your account. Please press Reload to sign in again.",
  "pendingCreation": "Pending Creation",
  "learnMore": "Learn more",
  "intoDomain": "into OpenSearch domain.",
  "intoLightEngine": "into Light Engine.",
  "archDesc": "The architecture diagram to ingest log data into Analytics Engine.",
  "startTime": "Start Time",
  "endTime": "End Time",
  "other": "Other",
  "details": "Details",
  "ON_GOING": "On-going",
  "manual": "Manual",
  "instances": "Instances",
  "instanceName": "Instance name",
  "instanceGroup": "Instance Group",
  "instanceSelection": "Instance selection",
  "sourceAccount": "AWS account",
  "accountSettings": "Account Settings",
  "error": {
    "ingestionAlreadyExists": "The ingestion already exists",
    "configAlreadyExists": "The config already exists",
    "logSourceAlreadyExists": "The log source name already exists",
    "notFound": "Below item not found: ",
    "unknownError": "Unknown error: ",
    "timeFormatShouldNotBeEmpty": "Time format should not be empty if the field type is date.",
    "eksEmpty": "EKS cluster cannot be empty",
    "indexNameEmpty": "Index name must not be empty",
    "invalidIndexName": "Invalid index name. Please use a lowercase string that does not begin with a number.",
    "sideCarPathInvalid": "In sidecar mode, log paths must share the same path. For example, '/var/log/access.log, /var/log/error.log' is acceptable, '/var/log/access.log, /var/error/error.log' is not acceptable.",
    "instanceGroupEmpty": "Instance Groups cannot be empty",
    "bucketEmpty": "Bucket must not be empty",
    "filePathNotBegin": "File path must not begin with /(slash)",
    "filePathContainStar": "File path can only contain at most one *",
    "syslogParserError": "Please select a syslog parser",
    "iisParserError": "Please select a IIS parser",
    "multilineParserError": "Please select a multi-line parser",
    "instanceAlreadyExists": "These instances of your choice have been added: ",
    "inputTimeKeyFormat": "Please input time key format",
    "overlappedPrefixWithS3Bucket": "The prefix entered must not overlap with the prefix in the event notification, please retype it",
    "s3BucketCheckFailed": "Failed to detect S3 storage bucket, please check if it is correct",
    "pipelinePauseMessage": "The pipeline is paused due to high error rate in processing. Go the detail page to find out more.",
    "crossAccountDisableKDS": "Cross-account ingestion does not support Realtime logs"
  },
  "moreDetailsGoToCloudformation": "More details, please go to Cloudformation event",
  "page": "page",
  "pageNotFound": "Page Not Found",
  "home": "Home",
  "clear": "Clear",
  "alert": "Need upgrade",
  "warning": "Warning",
  "archName": "Architecture diagram"
}
