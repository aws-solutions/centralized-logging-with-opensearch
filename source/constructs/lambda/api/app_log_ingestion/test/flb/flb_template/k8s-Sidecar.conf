---
apiVersion: v1
kind: Namespace
metadata:
  name: {{namespace}}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluent-bit
  namespace: {{namespace}}
  annotations:
    {{svc_acct_role}}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluent-bit-read
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
  - apiGroups: [""]
    resources:
      - namespaces
      - pods
      - pods/logs
      - nodes
      - nodes/proxy
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluent-bit-read
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluent-bit-read
subjects:
- kind: ServiceAccount
  name: fluent-bit
  namespace: {{namespace}}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config-sidecar
  namespace: logging
  labels:
    k8s-app: fluent-bit
data:
  # Configuration files: server, input, filters and output
  # ======================================================
  fluent-bit.conf: |
{% set flb_data_pipelines=configmap.flb_data_pipelines %}
{% include 'pipeline.conf' %}
    [FILTER]
        Name                modify
        Match               log.*
        Set                 cluster ${CLUSTER_NAME}

  parsers.conf: |
    [PARSER]
        Name   json
        Format json
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%LZ

    [PARSER]
        Name         docker
        Format       json
        Time_Key     container_log_time
        Time_Format  %Y-%m-%dT%H:%M:%S.%LZ
        Time_Keep    On

    [PARSER]
        Name        cri_regex
        Format      regex
        Regex       ^(?<container_log_time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) ?(?<log>.*)$

    {% include 'parser.conf' %}

---
apiVersion: v1
kind: Pod
metadata:
  namespace: {{namespace}}
  name: app-sidecar
  labels:
    app: app-sidecar
spec:
  containers:
  # Fluent-bit's container
  - name: fluent-bit
    image: {{fluent_bit_image}}
    imagePullPolicy: Always
    env:
      - name: CLUSTER_NAME
        value: "{{eks_cluster_name}}"
    ports:
      - containerPort: 2022
    resources:
        limits:
          memory: 200Mi
        requests:
          cpu: 500m
          memory: 100Mi
    volumeMounts:
    - name: var-log
      mountPath: /var/log
    - name: var-lib-docker-containers
      mountPath: /var/lib/docker/containers
      readOnly: true
    - name: app-log
      mountPath: {{flb_data_pipelines[0].tail.logPath}}
    - name: fluentbitstate
      mountPath: /var/fluent-bit/state
    - name: fluent-bit-config
      mountPath: /fluent-bit/etc/
      readOnly: true
  volumes:
  - name: var-log
    hostPath:
      path: /var/log
  - name: var-lib-docker-containers
    hostPath:
      path: /var/lib/docker/containers
  - name: app-log
    emptyDir: {}
  - name: fluentbitstate
    hostPath:
      path: /var/fluent-bit/state
  - name: fluent-bit-config
    configMap:
      name: fluent-bit-config-sidecar
  serviceAccountName: fluent-bit   