#set($ctx.args.confName = $util.urlDecode($ctx.args.confName))
$util.validate($util.matches("^[\w\s_.:\/=+\-@]{1,128}$", $ctx.args.confName), "Invalid Config Name, can only contain alphanumeric characters, spaces, or any of the following: _.:/=+-@")


#set($ctx.args.userLogFormat = $util.urlDecode($ctx.args.userLogFormat))

#set($ctx.args.regularExpression = $util.urlDecode($ctx.args.regularExpression))
#set($ctx.args.timeRegularExpression = $util.urlDecode($ctx.args.timeRegularExpression))

#foreach($param in $ctx.args.regularSpecs)
    #set($param.key = $util.urlDecode($param.key))
    #if($param.key.length() > 250)
    $util.error("Value for key cannot exceed 250 characters.")
    #end
    #set($param.type = $util.urlDecode($param.type))
    #if($param.type.length() > 250)
    $util.error("Value for type cannot exceed 250 characters.")
    #end
#end

#foreach($param in $ctx.args.processorFilterRegex.filters)
    #set($param.key = $util.urlDecode($param.key))
    #set($param.value = $util.urlDecode($param.value))
#end
 
{"version": "2017-02-28", "operation": "Invoke", "payload": $util.toJson($ctx)}